[tool.poetry]
name = "kupydo"
version = "0.1.0"
description = "Kubernetes Pythonic Deployment Operator"
authors = ["Mattias Aabmets <mattias.aabmets@gmail.com>"]
repository = "https://github.com/kupydo/library"
license = "MIT"
readme = "README.md"
packages = [
    { include = "kupydo" }
]

[tool.poetry.scripts]
kupydo = "kupydo.internal.cli.main:app"

[tool.poetry.dependencies]
python = "^3.11"
orjson = "^3.9.10"
dotmap = "^1.3.30"
rich = "^13.7.0"
pydantic-settings = "^2.1.0"
kubernetes-asyncio = "^28.2.1"
typer = {extras = ["all"], version = "^0.9.0"}
devtools-cli = "^0.12.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pytest-asyncio = "^0.21.1"
pytest-cov = "^4.1.0"
pytest-xdist = {extras = ["psutil"], version = "^3.5.0"}
coverage = "^7.3.2"

[tool.pytest.ini_options]
asyncio_mode = "auto"
console_output_style = "count"
filterwarnings = ["ignore::DeprecationWarning"]
testpaths = ["tests"]
addopts = [
    "--cov=kupydo",
    "--cov-report=html",
    "--no-cov-on-fail",
    "--import-mode=append",
    "--numprocesses=auto",
    "--maxprocesses=4"
]
pythonpath = [
    ".",
    "./kupydo",
    "./kupydo/internal"
]

[tool.coverage.run]
branch = true
source = ["kupydo/*"]

[tool.coverage.report]
#fail_under = 90
skip_empty = true
ignore_errors = true
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "@abstractmethod"
]

[tool.coverage.html]
directory = ".htmlcov"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
